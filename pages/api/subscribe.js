const nodemailer = require("nodemailer");
const GoogleSpreadsheet = require("google-spreadsheet");

export default async function handler(req, res) {
    const toEmail = req.body.email;
    const fromEmail = '"The Code Foundation" <contact@thecodingfoundation.com>';
    const text = `test`;

    // create reusable transporter object using the default SMTP transport
    let transporter = nodemailer.createTransport({
        service: 'Gmail',
        auth: {
            user: process.env.CONTACT_EMAIL,
            pass: process.env.CONTACT_EMAIL_PASS
        }
    });

    // send mail with defined transport object
    let info = await transporter.sendMail({
        from: fromEmail, // sender address
        to: toEmail, // list of receivers
        subject: "Thanks for signing up for The Code Foundation!", // Subject line
        html: text // html body
    });


    const doc = new GoogleSpreadsheet('1S8PNrQFJfKDS59INndDcHNMIbcvCDOcaHFASO5VA3Ww');
    const sheetType = req.body.sheetType;
    await doc.useServiceAccountAuth({
        // env var values are copied from service account credentials generated by google
        // see "Authentication" section in docs for more info
        client_email: process.env.GOOGLE_SERVICE_ACCOUNT_EMAIL,
        private_key: process.env.GOOGLE_PRIVATE_KEY,
    });


    await doc.loadInfo(); // loads document properties and worksheets

    const index = doc.sheetsByIndex.findIndex(sheet => sheet.title === sheetType);

    const sheet = doc.sheetsByIndex[index]; // or use doc.sheetsById[id]
    const date = new Date().toLocaleDateString("en-US");
    await sheet.addRow({ Timestamp: date, Email: toEmail });




    if (info.accepted.length > 0) {
        res.status(200).json({
            accepted: true
        });
    }
    else {
        res.status(200).json({
            accepted: false
        });
    }
}
