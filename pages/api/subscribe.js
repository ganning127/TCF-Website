// import nodemailer from 'nodemailer';
import { GoogleSpreadsheet } from 'google-spreadsheet';

export default async function handler(req, res) {
    // const toEmail = req.body.email;
    // const fromEmail = '"The Coding Foundation" <contact@thecodingfoundation.com>';
    // const text = `test`;

    // // create reusable transporter object using the default SMTP transport
    // let transporter = nodemailer.createTransport({
    //     service: 'Gmail',
    //     auth: {
    //         user: process.env.CONTACT_EMAIL,
    //         pass: process.env.CONTACT_EMAIL_PASS
    //     }
    // });

    // send mail with defined transport object
    // let info = await transporter.sendMail({
    //     from: fromEmail, // sender address
    //     to: toEmail, // list of receivers
    //     subject: "Thanks for signing up for The Coding Foundation!", // Subject line
    //     html: text // html body
    // });

    try {
        const subEmail = req.body.email;


        const doc = new GoogleSpreadsheet('1or7PcM-g3pIkHldX7riDR7dJaVYswi6W0kLI5wYHRFE');
        await doc.useServiceAccountAuth({
            // env var values are copied from service account credentials generated by google
            // see "Authentication" section in docs for more info
            client_email: process.env.GOOGLE_SERVICE_ACCOUNT_EMAIL,
            private_key: process.env.GOOGLE_PRIVATE_KEY,
        });


        await doc.loadInfo(); // loads document properties and worksheets
        const sheet = doc.sheetsByIndex[0]; // or use doc.sheetsById[id]
        const date = new Date().toLocaleDateString("en-US");
        await sheet.addRow({ Timestamp: date, Email: subEmail });


        res.status(200).json({ success: true });
    }
    catch (err) {
        console.log(err);
        res.status(500).json({ success: false, msg: err });
    }




    // if (info.accepted.length > 0) {
    //     res.status(200).json({
    //         accepted: true
    //     });
    // }
    // else {
    //     res.status(200).json({
    //         accepted: false
    //     });
    // }
}
